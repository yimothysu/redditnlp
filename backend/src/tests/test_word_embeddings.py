import pytest
import os
import sys
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from analysis.features.word_embeddings import *

words = ["hello", "bye"]
expected_2d_embeddings = {'hello': (-2.0874107, 5.039613e-07), 'bye': (2.0874116, 5.0396113e-07)}
expected_embedding = np.array([[-0.05419922,  0.01708984, -0.00527954,  0.33203125, -0.25      ,
       -0.01397705, -0.15039062, -0.265625  ,  0.01647949,  0.3828125 ,
       -0.03295898, -0.09716797, -0.16308594, -0.04443359,  0.00946045,
        0.18457031,  0.03637695,  0.16601562,  0.36328125, -0.25585938,
        0.375     ,  0.171875  ,  0.21386719, -0.19921875,  0.13085938,
       -0.07275391, -0.02819824,  0.11621094,  0.15332031,  0.09082031,
        0.06787109, -0.0300293 , -0.16894531, -0.20800781, -0.03710938,
       -0.22753906,  0.26367188,  0.012146  ,  0.18359375,  0.31054688,
       -0.10791016, -0.19140625,  0.21582031,  0.13183594, -0.03515625,
        0.18554688, -0.30859375,  0.04785156, -0.10986328,  0.14355469,
       -0.43554688, -0.0378418 ,  0.10839844,  0.140625  , -0.10595703,
        0.26171875, -0.17089844,  0.39453125,  0.12597656, -0.27734375,
       -0.28125   ,  0.14746094, -0.20996094,  0.02355957,  0.18457031,
        0.00445557, -0.27929688, -0.03637695, -0.29296875,  0.19628906,
        0.20703125,  0.2890625 , -0.20507812,  0.06787109, -0.43164062,
       -0.10986328, -0.2578125 , -0.02331543,  0.11328125,  0.23144531,
       -0.04418945,  0.10839844, -0.2890625 , -0.09521484, -0.10351562,
       -0.0324707 ,  0.07763672, -0.13378906,  0.22949219,  0.06298828,
        0.08349609,  0.02929688, -0.11474609,  0.00534058, -0.12988281,
        0.02514648,  0.08789062,  0.24511719, -0.11474609, -0.296875  ,
       -0.59375   , -0.29492188, -0.13378906,  0.27734375, -0.04174805,
        0.11621094,  0.28320312,  0.00241089,  0.13867188, -0.00683594,
       -0.30078125,  0.16210938,  0.01171875, -0.13867188,  0.48828125,
        0.02880859,  0.02416992,  0.04736328,  0.05859375, -0.23828125,
        0.02758789,  0.05981445, -0.03857422,  0.06933594,  0.14941406,
       -0.10888672, -0.07324219,  0.08789062,  0.27148438,  0.06591797,
       -0.37890625, -0.26171875, -0.13183594,  0.09570312, -0.3125    ,
        0.10205078,  0.03063965,  0.23632812,  0.00582886,  0.27734375,
        0.20507812, -0.17871094, -0.31445312, -0.01586914,  0.13964844,
        0.13574219,  0.0390625 , -0.29296875,  0.234375  , -0.33984375,
       -0.11816406,  0.10644531, -0.18457031, -0.02099609,  0.02563477,
        0.25390625,  0.07275391,  0.13574219, -0.00138092, -0.2578125 ,
       -0.2890625 ,  0.10107422,  0.19238281, -0.04882812,  0.27929688,
       -0.3359375 , -0.07373047,  0.01879883, -0.10986328, -0.04614258,
        0.15722656,  0.06689453, -0.03417969,  0.16308594,  0.08642578,
        0.44726562,  0.02026367, -0.01977539,  0.07958984,  0.17773438,
       -0.04370117, -0.00952148,  0.16503906,  0.17285156,  0.23144531,
       -0.04272461,  0.02355957,  0.18359375, -0.41601562, -0.01745605,
        0.16796875,  0.04736328,  0.14257812,  0.08496094,  0.33984375,
        0.1484375 , -0.34375   , -0.14160156, -0.06835938, -0.14648438,
       -0.02844238,  0.07421875, -0.07666016,  0.12695312,  0.05859375,
       -0.07568359, -0.03344727,  0.23632812, -0.16308594,  0.16503906,
        0.1484375 , -0.2421875 , -0.3515625 , -0.30664062,  0.00491333,
        0.17675781,  0.46289062,  0.14257812, -0.25      , -0.25976562,
        0.04370117,  0.34960938,  0.05957031,  0.07617188, -0.02868652,
       -0.09667969, -0.01281738,  0.05859375, -0.22949219, -0.1953125 ,
       -0.12207031,  0.20117188, -0.42382812,  0.06005859,  0.50390625,
        0.20898438,  0.11230469, -0.06054688,  0.33203125,  0.07421875,
       -0.05786133,  0.11083984, -0.06494141,  0.05639648,  0.01757812,
        0.08398438,  0.13769531,  0.2578125 ,  0.16796875, -0.16894531,
        0.01794434,  0.16015625,  0.26171875,  0.31640625, -0.24804688,
        0.05371094, -0.0859375 ,  0.17089844, -0.39453125, -0.00156403,
       -0.07324219, -0.04614258, -0.16210938, -0.15722656,  0.21289062,
       -0.15820312,  0.04394531,  0.28515625,  0.01196289, -0.26953125,
       -0.04370117,  0.37109375,  0.04663086, -0.19726562,  0.3046875 ,
       -0.36523438, -0.23632812,  0.08056641, -0.04248047, -0.14648438,
       -0.06225586, -0.0534668 , -0.05664062,  0.18945312,  0.37109375,
       -0.22070312,  0.04638672,  0.02612305, -0.11474609,  0.265625  ,
       -0.02453613,  0.11083984, -0.02514648, -0.12060547,  0.05297852,
        0.07128906,  0.00063705, -0.36523438, -0.13769531, -0.12890625], 
        [-3.02734375e-02,  6.54296875e-02,  9.22851562e-02, -2.41210938e-01,
        2.50000000e-01, -4.24804688e-02, -4.78515625e-01, -5.39062500e-01,
        8.30078125e-02,  2.43164062e-01,  2.79296875e-01,  3.82812500e-01,
        2.44140625e-02,  3.39843750e-01, -2.15820312e-01,  1.03515625e-01,
        8.54492188e-02,  3.65234375e-01,  6.59179688e-02, -1.09375000e-01,
        2.89062500e-01,  3.41796875e-01,  5.12695312e-02, -4.90234375e-01,
        7.37304688e-02, -2.59765625e-01, -1.91650391e-02, -3.08593750e-01,
       -2.33398438e-01, -5.93261719e-02, -3.26171875e-01,  3.35937500e-01,
       -1.07910156e-01, -2.22656250e-01,  1.74804688e-01,  1.63085938e-01,
        1.77734375e-01, -6.03027344e-02,  5.34667969e-02, -5.64575195e-04,
       -1.10351562e-01, -3.75000000e-01,  5.19531250e-01,  2.19726562e-01,
       -2.17773438e-01, -2.16796875e-01, -2.66113281e-02, -1.25976562e-01,
        9.32617188e-02,  1.64062500e-01,  1.01562500e-01, -1.03149414e-02,
       -1.70898438e-02, -1.68945312e-01, -1.67968750e-01, -2.33154297e-02,
        6.93359375e-02,  1.57226562e-01,  3.67187500e-01, -3.00781250e-01,
       -3.63281250e-01,  1.66992188e-01,  3.29589844e-02,  4.41894531e-02,
       -8.83789062e-02, -1.37695312e-01, -9.76562500e-02, -6.22558594e-02,
       -3.33984375e-01,  2.81250000e-01,  1.04980469e-01, -1.55273438e-01,
       -9.03320312e-02, -1.32812500e-01, -8.54492188e-02, -1.80664062e-01,
       -2.38281250e-01, -2.13867188e-01,  2.28515625e-01,  1.24023438e-01,
       -1.27929688e-01, -2.00195312e-01, -1.55273438e-01, -2.22656250e-01,
       -3.45703125e-01,  1.93359375e-01, -1.66015625e-02,  2.71484375e-01,
        6.98242188e-02,  1.35742188e-01,  3.96728516e-03, -1.31835938e-01,
        7.37304688e-02, -1.14257812e-01,  5.59082031e-02, -2.45117188e-01,
        4.88281250e-02, -6.05468750e-02,  5.32226562e-02, -1.25000000e-01,
       -2.66113281e-02, -9.57031250e-02,  3.16406250e-01,  1.38671875e-01,
        1.48010254e-03, -1.54296875e-01, -2.38281250e-01, -8.93554688e-02,
       -1.32812500e-01,  7.71484375e-02,  1.63085938e-01, -1.83593750e-01,
        2.96875000e-01, -1.27929688e-01,  2.75390625e-01,  4.49218750e-02,
        5.07812500e-01,  7.17773438e-02, -2.32421875e-01, -2.89062500e-01,
        9.08203125e-02, -6.78710938e-02,  1.58203125e-01, -2.05078125e-01,
       -1.25976562e-01,  7.17773438e-02, -1.62109375e-01, -1.44531250e-01,
       -7.27539062e-02,  3.93066406e-02, -6.00585938e-02, -3.75000000e-01,
       -1.62109375e-01, -3.04687500e-01, -2.23632812e-01, -6.78710938e-02,
        1.83593750e-01,  5.35156250e-01, -1.63085938e-01,  2.63671875e-01,
        3.16406250e-01,  1.01562500e-01,  1.37695312e-01, -2.65625000e-01,
       -3.43750000e-01,  2.35351562e-01, -2.65625000e-01, -2.46582031e-02,
       -7.37304688e-02, -2.40234375e-01,  2.77343750e-01, -2.48046875e-01,
       -3.16406250e-01, -2.45361328e-02,  3.12500000e-02, -2.83203125e-01,
        1.04492188e-01,  5.66406250e-02, -2.07519531e-02, -1.50390625e-01,
       -5.07812500e-01,  7.42187500e-02,  1.48773193e-03, -1.45507812e-01,
       -9.08203125e-02, -4.41406250e-01, -2.55859375e-01, -8.93554688e-02,
       -1.05957031e-01,  6.68945312e-02,  9.22851562e-02, -3.94531250e-01,
       -5.17578125e-02,  1.44531250e-01,  1.84570312e-01,  9.71679688e-02,
        1.72851562e-01, -1.51367188e-01, -2.57812500e-01, -1.23046875e-01,
       -8.30078125e-02,  1.00097656e-01,  5.00000000e-01, -5.39550781e-02,
        1.53320312e-01,  2.61718750e-01,  1.09863281e-01, -8.30078125e-02,
        2.96875000e-01,  1.40625000e-01, -1.46484375e-01, -1.17675781e-01,
       -9.81445312e-02, -6.73828125e-02,  1.30859375e-01,  1.65039062e-01,
       -1.48437500e-01,  1.48437500e-01, -5.73730469e-02,  9.86328125e-02,
       -8.98437500e-02,  8.88671875e-02,  1.75781250e-01,  2.17773438e-01,
        8.69140625e-02, -1.95312500e-01,  5.31005859e-03,  1.61132812e-01,
        2.10937500e-01, -3.86718750e-01,  6.03027344e-02,  5.42968750e-01,
       -2.66113281e-02,  3.32031250e-02,  2.87109375e-01, -2.07031250e-01,
        1.45507812e-01,  3.56445312e-02, -5.73730469e-02, -2.06054688e-01,
       -1.07421875e-01, -1.25976562e-01, -2.65625000e-01, -2.75390625e-01,
       -3.34472656e-02, -4.70703125e-01, -3.33984375e-01,  2.94189453e-02,
       -1.87500000e-01,  8.05664062e-02, -2.02148438e-01, -5.10253906e-02,
       -2.05078125e-01, -6.03027344e-02,  1.60156250e-01,  2.40234375e-01,
        9.52148438e-02, -4.83398438e-02, -1.15356445e-02,  2.12890625e-01,
        2.42187500e-01,  5.85937500e-02,  3.02734375e-01, -2.08007812e-01,
       -8.44726562e-02,  1.18164062e-01, -2.57812500e-01, -1.65039062e-01,
       -1.81640625e-01,  2.56347656e-02,  6.34765625e-02,  1.90429688e-01,
        1.78710938e-01, -3.68652344e-02, -3.59375000e-01,  1.62109375e-01,
        1.90429688e-01,  5.68847656e-02, -8.74023438e-02,  6.25000000e-02,
        1.96289062e-01,  1.58203125e-01, -2.49023438e-01,  2.96875000e-01,
        1.92382812e-01, -6.25000000e-02,  2.48046875e-01,  3.53515625e-01,
       -3.90625000e-01, -7.81250000e-02, -4.15039062e-03,  4.78515625e-01,
        1.10351562e-01, -9.17968750e-02,  6.39648438e-02, -4.37011719e-02,
        1.28906250e-01, -1.96533203e-02,  5.68847656e-02,  2.65625000e-01,
       -1.27929688e-01, -2.51953125e-01, -9.81445312e-02, -1.35040283e-03,
        1.22558594e-01, -1.62109375e-01, -1.09863281e-01,  2.16796875e-01,
       -1.23535156e-01,  2.04101562e-01, -2.59765625e-01,  1.27929688e-01,
       -1.68945312e-01, -2.55859375e-01,  3.41796875e-01,  2.09960938e-01,
       -2.20703125e-01, -5.66406250e-01, -6.25610352e-03,  1.51367188e-01]])


# Test word embeddings align with expected output
def test_word_embeddings():
    expected_words = ["hello", "bye"]
    actual_output_words, actual_output_embeddings = get_word_embeddings(words)
    assert len(actual_output_words) == len(expected_words) == len(actual_output_embeddings)
    assert actual_output_words == expected_words
    np.testing.assert_allclose(actual_output_embeddings, expected_embedding, rtol=1e-3, atol=1e-10)

# Test that 2D embedding output is in correct shape, format, and produces expected result
def test_get_2d_embeddings():
    actual_embeddings_2d = get_2d_embeddings(words)
    # Ensure 2 word embeddings are created
    assert(len(actual_embeddings_2d)) == 2
    # Ensure that word embeddings are in 2D form
    assert len(actual_embeddings_2d["hello"]) == 2
    assert len(actual_embeddings_2d["bye"]) == 2
    # Ensure word embeddings equals expected result
    for word in actual_embeddings_2d:
        np.testing.assert_allclose(expected_2d_embeddings[word], actual_embeddings_2d[word])
